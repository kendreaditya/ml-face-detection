# -*- coding: utf-8 -*-
"""DecisionTree.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Y85YQQCpk56164o_cAJaU7ngfjwAf6OD
"""

# imports needed
import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn import tree

# gets data as pandas data frame from script args
import argparse

parser = argparse.ArgumentParser()
parser.add_argument("--data", type = pd.DataFrame, help = "pandas dataframe containing data")

args = parser.parse_args()

data = args.data

# split the data into training and testing sets

# Separating the target variable
features = data.values[:, 1:5]
target = data.values[:, 0]

# Splitting the dataset into train and test sets
features_train, features_test, target_train, target_test = train_test_split(features, target, test_size = 0.3, random_state = 100)

# Creating the classifier object
decision_tree = DecisionTreeClassifier(criterion = "gini", random_state = 100)

# train the decision tree
decision_tree.fit(features_train, target_train)

# how to make a prediction using the decision tree
class_prediction = decision_tree.predict(features_test)

# printing the decision tree
tree.plot_tree(decision_tree)